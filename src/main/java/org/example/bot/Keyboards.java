package org.example.bot;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

public class Keyboards {

    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
    public static final String PROFILE_BTN = "üë§ –ü—Ä–æ—Ñ–∏–ª—å";
    public static final String CLAN_BTN = "üõ° –ö–ª–∞–Ω";
    public static final String LINK_ACC_BTN = "üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç";
    public static final String SEARCH_PROFILE_BTN = "üîç –ù–∞–π—Ç–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ —Ç–µ–≥—É";
    public static final String MY_CLAN_BTN = "üõ° –ú–æ–π –∫–ª–∞–Ω (–∏–∑ –ø—Ä–æ—Ñ–∏–ª—è)";
    public static final String SEARCH_CLAN_BTN = "üîç –ù–∞–π—Ç–∏ –∫–ª–∞–Ω –ø–æ —Ç–µ–≥—É";
    public static final String BACK_BTN = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é";
    public static final String MY_PROFILE_PREFIX = "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å";
    public static final String CLAN_MEMBERS_BTN = "üë• –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤";
    public static final String CLAN_WARLOG_BTN = "‚öîÔ∏è –ü–æ—Å–ª–µ–¥–Ω–∏–µ –≤–æ–π–Ω—ã";
    public static final String BACK_TO_CLAN_MENU_BTN = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –∫–ª–∞–Ω–æ–≤";
    public static final String CLAN_CURRENT_CWL_BTN = "‚öîÔ∏è –¢–µ–∫—É—â–µ–µ –õ–í–ö";
    public static final String CLAN_CWL_BONUS_BTN = "üèÜ –ë–æ–Ω—É—Å—ã –õ–í–ö";
    public static final String NOTIFICATIONS_BTN = "üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ö–í";
    public static final String CLAN_CURRENT_WAR_BTN = "‚öîÔ∏è –¢–µ–∫—É—â–∞—è –ö–í";

    // –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è callback-–¥–∞–Ω–Ω—ã—Ö
    public static final String MEMBERS_CALLBACK = "members";
    public static final String WAR_LIST_CALLBACK = "warlist";
    public static final String WAR_INFO_CALLBACK = "warinfo";
    public static final String PROFILE_CALLBACK = "profile";
    public static final String NOTIFY_TOGGLE_CALLBACK = "notify_toggle";
    public static final String CWL_BONUS_CALLBACK = "cwlbonus";
    public static final String MEMBERS_SORT_CALLBACK = "members_sort";
    public static final String MEMBERS_VIEW_CALLBACK = "members_view";

    public static ReplyKeyboardMarkup mainMenu() {
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton(PROFILE_BTN));
        row1.add(new KeyboardButton(CLAN_BTN));

        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton(NOTIFICATIONS_BTN));

        return ReplyKeyboardMarkup.builder().keyboard(List.of(row1, row2)).resizeKeyboard(true).build();
    }

    public static ReplyKeyboardMarkup profileMenu(String playerName) {
        List<KeyboardRow> keyboard = new ArrayList<>();
        if (playerName != null && !playerName.isEmpty()) {
            KeyboardRow myProfileRow = new KeyboardRow();
            myProfileRow.add(new KeyboardButton(MY_PROFILE_PREFIX + " (" + playerName + ")"));
            keyboard.add(myProfileRow);
        }
        KeyboardRow actionsRow = new KeyboardRow();
        actionsRow.add(new KeyboardButton(LINK_ACC_BTN));
        actionsRow.add(new KeyboardButton(SEARCH_PROFILE_BTN));
        keyboard.add(actionsRow);
        KeyboardRow backRow = new KeyboardRow();
        backRow.add(new KeyboardButton(BACK_BTN));
        keyboard.add(backRow);
        return ReplyKeyboardMarkup.builder().keyboard(keyboard).resizeKeyboard(true).build();
    }

    public static ReplyKeyboardMarkup clanMenu() {
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton(MY_CLAN_BTN));
        row1.add(new KeyboardButton(SEARCH_CLAN_BTN));
        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton(BACK_BTN));
        return ReplyKeyboardMarkup.builder().keyboard(List.of(row1, row2)).resizeKeyboard(true).build();
    }

    public static ReplyKeyboardMarkup clanInspectionMenu() {
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton(CLAN_MEMBERS_BTN));
        row1.add(new KeyboardButton(CLAN_WARLOG_BTN));
        KeyboardRow row2 = new KeyboardRow();
        row2.add(new KeyboardButton(CLAN_CURRENT_WAR_BTN));
        row2.add(new KeyboardButton(CLAN_CURRENT_CWL_BTN));
        row2.add(new KeyboardButton(CLAN_CWL_BONUS_BTN));
        KeyboardRow row3 = new KeyboardRow();
        row3.add(new KeyboardButton(BACK_TO_CLAN_MENU_BTN));
        return ReplyKeyboardMarkup.builder().keyboard(List.of(row1, row2, row3)).resizeKeyboard(true).build();
    }

    public static InlineKeyboardMarkup warHistorySortMenu(String clanTag) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        rows.add(List.of(
                InlineKeyboardButton.builder().text("üìÖ –°–Ω–∞—á–∞–ª–∞ –Ω–æ–≤—ã–µ").callbackData(String.join(":", WAR_LIST_CALLBACK, clanTag, WarSort.DATE_DESC.toString(), "0")).build()
        ));
        rows.add(List.of(
                InlineKeyboardButton.builder().text("üìÖ –°–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ").callbackData(String.join(":", WAR_LIST_CALLBACK, clanTag, WarSort.DATE_ASC.toString(), "0")).build()
        ));
        rows.add(List.of(
                InlineKeyboardButton.builder().text("üèÜ –¢–æ–ª—å–∫–æ –õ–í–ö (—Ç–µ–∫—É—â–∏–π —Å–µ–∑–æ–Ω)").callbackData(String.join(":", WAR_LIST_CALLBACK, clanTag, WarSort.CWL_ONLY.toString(), "0")).build()
        ));
        return InlineKeyboardMarkup.builder().keyboard(rows).build();
    }

    public static InlineKeyboardMarkup cwlBonusMonthMenu() {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        LocalDate today = LocalDate.now();
        for (int i = 0; i < 4; i++) {
            LocalDate date = today.minusMonths(i);
            String monthName = date.format(DateTimeFormatter.ofPattern("LLLL yyyy", new Locale("ru")));
            String callbackData = String.join(":", CWL_BONUS_CALLBACK, date.format(DateTimeFormatter.ofPattern("yyyy-MM")));
            rows.add(List.of(
                    InlineKeyboardButton.builder().text(monthName).callbackData(callbackData).build()
            ));
        }
        return InlineKeyboardMarkup.builder().keyboard(rows).build();
    }

    public static InlineKeyboardMarkup memberListManagementMenu(String clanTag, String currentSort, String currentView) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        List<InlineKeyboardButton> sortRow = new ArrayList<>();
        sortRow.add(InlineKeyboardButton.builder().text("üèÜ‚¨ÜÔ∏è").callbackData(String.join(":", MEMBERS_SORT_CALLBACK, clanTag, "trophies_asc", currentView, "0")).build());
        sortRow.add(InlineKeyboardButton.builder().text("üèÜ‚¨áÔ∏è").callbackData(String.join(":", MEMBERS_SORT_CALLBACK, clanTag, "trophies_desc", currentView, "0")).build());
        sortRow.add(InlineKeyboardButton.builder().text("üè∞‚¨ÜÔ∏è").callbackData(String.join(":", MEMBERS_SORT_CALLBACK, clanTag, "th_asc", currentView, "0")).build());
        sortRow.add(InlineKeyboardButton.builder().text("üè∞‚¨áÔ∏è").callbackData(String.join(":", MEMBERS_SORT_CALLBACK, clanTag, "th_desc", currentView, "0")).build());
        sortRow.add(InlineKeyboardButton.builder().text("üî∞–†–∞–Ω–≥").callbackData(String.join(":", MEMBERS_SORT_CALLBACK, clanTag, "rank", currentView, "0")).build());
        rows.add(sortRow);

        String switchButtonText = "home".equals(currentView) ? "üè† ‚û°Ô∏è  —Å—Ç—Ä–æ–∏—Ç–µ–ª—è" : "—Å—Ç—Ä–æ–∏—Ç–µ–ª—è ‚û°Ô∏è üè†";
        String newView = "home".equals(currentView) ? "builder" : "home";
        rows.add(List.of(
                InlineKeyboardButton.builder().text(switchButtonText).callbackData(String.join(":", MEMBERS_SORT_CALLBACK, clanTag, currentSort, newView, "0")).build()
        ));

        return InlineKeyboardMarkup.builder().keyboard(rows).build();
    }

    public static InlineKeyboardMarkup notificationMenu(boolean isSubscribed) {
        String buttonText = isSubscribed ? "‚úÖ –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π" : "üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è";
        InlineKeyboardButton button = InlineKeyboardButton.builder()
                .text(buttonText)
                .callbackData(NOTIFY_TOGGLE_CALLBACK)
                .build();
        return InlineKeyboardMarkup.builder().keyboardRow(List.of(button)).build();
    }

    public static InlineKeyboardMarkup paginationMenu(String callbackPrefix, String clanTag, WarSort sortOrder, int currentPage, int maxPage) {
        List<InlineKeyboardButton> row = new ArrayList<>();
        if (currentPage > 0) {
            row.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥").callbackData(String.join(":", callbackPrefix, clanTag, sortOrder.toString(), String.valueOf(currentPage - 1))).build());
        }
        row.add(InlineKeyboardButton.builder().text((currentPage + 1) + "/" + (maxPage + 1)).callbackData("noop").build());
        if (currentPage < maxPage) {
            row.add(InlineKeyboardButton.builder().text("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è").callbackData(String.join(":", callbackPrefix, clanTag, sortOrder.toString(), String.valueOf(currentPage + 1))).build());
        }
        return InlineKeyboardMarkup.builder().keyboardRow(row).build();
    }

    public static InlineKeyboardMarkup paginationMenu(String callbackPrefix, String clanTag, int currentPage, int maxPage) {
        List<InlineKeyboardButton> row = new ArrayList<>();
        if (currentPage > 0) {
            row.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥").callbackData(String.join(":", callbackPrefix, clanTag, String.valueOf(currentPage - 1))).build());
        }
        row.add(InlineKeyboardButton.builder().text((currentPage + 1) + "/" + (maxPage + 1)).callbackData("noop").build());
        if (currentPage < maxPage) {
            row.add(InlineKeyboardButton.builder().text("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è").callbackData(String.join(":", callbackPrefix, clanTag, String.valueOf(currentPage + 1))).build());
        }
        return InlineKeyboardMarkup.builder().keyboardRow(row).build();
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø–∞–≥–∏–Ω–∞—Ü–∏—è –¥–ª—è —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å
    public static InlineKeyboardMarkup paginationMenu(String callbackPrefix, int currentPage, int maxPage) {
        List<InlineKeyboardButton> row = new ArrayList<>();
        if (currentPage > 0) {
            row.add(InlineKeyboardButton.builder().text("‚¨ÖÔ∏è –ù–∞–∑–∞–¥").callbackData(callbackPrefix + ":" + (currentPage - 1)).build());
        }
        row.add(InlineKeyboardButton.builder().text((currentPage + 1) + "/" + (maxPage + 1)).callbackData("noop").build());
        if (currentPage < maxPage) {
            row.add(InlineKeyboardButton.builder().text("–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è").callbackData(callbackPrefix + ":" + (currentPage + 1)).build());
        }
        return InlineKeyboardMarkup.builder().keyboardRow(row).build();
    }
}