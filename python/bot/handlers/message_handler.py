"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞ Clash of Clans.
"""
import logging
from typing import TYPE_CHECKING

from ..user_state import UserState
from ..keyboards import Keyboards

if TYPE_CHECKING:
    from telegram import Update
    from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)


class MessageHandler:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –∫–æ–º–∞–Ω–¥.
    """
    
    def __init__(self, bot, message_generator):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π.
        
        Args:
            bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
            message_generator: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
        """
        self.bot = bot
        self.message_generator = message_generator
    
    async def handle(self, update: "Update", context: "ContextTypes.DEFAULT_TYPE") -> None:
        """
        –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
        
        Args:
            update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
        """
        if not update.message or not update.message.text:
            return
            
        chat_id = update.message.chat_id
        text = update.message.text
        user_state = context.user_data.get('state')
        
        logger.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {chat_id}: {text}")
        
        if user_state is None:
            await self._handle_menu_commands(update, context, chat_id, text)
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è
        tag = self._process_tag(text)
        
        try:
            if user_state == UserState.AWAITING_PLAYER_TAG_TO_LINK:
                await self.message_generator.handle_link_account(chat_id, tag)
            elif user_state == UserState.AWAITING_PLAYER_TAG_TO_SEARCH:
                await self.message_generator.display_player_info(chat_id, tag, None)
            elif user_state == UserState.AWAITING_CLAN_TAG_TO_SEARCH:
                await self.message_generator.display_clan_info(chat_id, tag)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è {user_state}: {e}")
            await context.bot.send_message(
                chat_id=chat_id,
                text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
        finally:
            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            context.user_data.pop('state', None)
    
    async def _handle_menu_commands(self, update: "Update", context: "ContextTypes.DEFAULT_TYPE", 
                                   chat_id: int, text: str) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –º–µ–Ω—é.
        
        Args:
            update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–æ—Ç–∞
            chat_id: ID —á–∞—Ç–∞
            text: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        """
        if text.startswith(Keyboards.MY_PROFILE_PREFIX):
            await self.message_generator.handle_my_profile_request(chat_id)
            return
        
        try:
            if text == "/start":
                context.user_data.pop('inspecting_clan', None)
                await self.bot.send_main_menu(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
                
            elif text == Keyboards.PROFILE_BTN:
                await self.message_generator.handle_profile_menu_request(chat_id)
                
            elif text in [Keyboards.CLAN_BTN, Keyboards.BACK_TO_CLAN_MENU_BTN]:
                context.user_data.pop('inspecting_clan', None)
                await self.bot.send_clan_menu(chat_id, "–ú–µ–Ω—é –∫–ª–∞–Ω–∞:")
                
            elif text == Keyboards.MY_CLAN_BTN:
                await self.message_generator.handle_my_clan_request(chat_id)
                
            elif text == Keyboards.CLAN_MEMBERS_BTN:
                clan_tag = context.user_data.get('inspecting_clan')
                if clan_tag:
                    await self.message_generator.display_members_page(
                        chat_id, None, clan_tag, 0, "rank", "home"
                    )
                    
            elif text == Keyboards.CLAN_WARLOG_BTN:
                clan_tag = context.user_data.get('inspecting_clan')
                if clan_tag:
                    await self.bot.send_war_history_sort_menu(
                        chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–æ–π–Ω:", clan_tag
                    )
                    
            elif text == Keyboards.CLAN_CURRENT_WAR_BTN:
                clan_tag = context.user_data.get('inspecting_clan')
                if clan_tag:
                    await self.message_generator.handle_current_war_request(chat_id, clan_tag)
                    
            elif text == Keyboards.CLAN_CURRENT_CWL_BTN:
                clan_tag = context.user_data.get('inspecting_clan')
                if clan_tag:
                    await self.message_generator.handle_current_cwl_request(chat_id, clan_tag)
                    
            elif text == Keyboards.CLAN_CWL_BONUS_BTN:
                await self.bot.send_cwl_bonus_menu(
                    chat_id, "üèÜ –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –±–æ–Ω—É—Å–æ–≤ –õ–í–ö:"
                )
                
            elif text == Keyboards.NOTIFICATIONS_BTN:
                await self.message_generator.handle_notification_menu(chat_id)
                
            elif text == Keyboards.LINK_ACC_BTN:
                context.user_data['state'] = UserState.AWAITING_PLAYER_TAG_TO_LINK
                await context.bot.send_message(
                    chat_id=chat_id,
                    text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤–∞—à —Ç–µ–≥ –∏–≥—Ä–æ–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2V99V8J0)."
                )
                
            elif text == Keyboards.SEARCH_PROFILE_BTN:
                context.user_data['state'] = UserState.AWAITING_PLAYER_TAG_TO_SEARCH
                await context.bot.send_message(
                    chat_id=chat_id,
                    text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–≥ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞."
                )
                
            elif text == Keyboards.SEARCH_CLAN_BTN:
                context.user_data['state'] = UserState.AWAITING_CLAN_TAG_TO_SEARCH
                await context.bot.send_message(
                    chat_id=chat_id,
                    text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–≥ –∫–ª–∞–Ω–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞."
                )
                
            elif text == Keyboards.BACK_BTN:
                context.user_data.pop('inspecting_clan', None)
                await self.bot.send_main_menu(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é '{text}': {e}")
            await context.bot.send_message(
                chat_id=chat_id,
                text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            )
    
    def _process_tag(self, text: str) -> str:
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–≥–∞ –∏–≥—Ä–æ–∫–∞ –∏–ª–∏ –∫–ª–∞–Ω–∞.
        
        Args:
            text: –ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç
            
        Returns:
            –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ç–µ–≥
        """
        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã, –ø—Ä–∏–≤–æ–¥–∏–º –∫ –≤–µ—Ä—Ö–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É, –∑–∞–º–µ–Ω—è–µ–º O –Ω–∞ 0
        tag = text.strip().upper().replace('O', '0')
        
        # –î–æ–±–∞–≤–ª—è–µ–º # –≤ –Ω–∞—á–∞–ª–æ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if not tag.startswith("#"):
            tag = "#" + tag
            
        return tag