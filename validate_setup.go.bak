package main

import (
	"fmt"
	"log"
	"os"

	"clashbot/internal/config"
)

// validateSetup –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–æ—Ç–∞
func validateSetup() {
	fmt.Println("üîç ClashBot - –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏")
	fmt.Println("=====================================")

	// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ Go –≤–µ—Ä—Å–∏–∏
	fmt.Println("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–µ–¥—ã:")
	fmt.Printf("   Go –≤–µ—Ä—Å–∏—è: %s\n", os.Getenv("GOVERSION"))

	// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	fmt.Println("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
	
	if _, err := os.Stat("api_tokens.txt"); os.IsNotExist(err) {
		fmt.Println("   ‚ùå –§–∞–π–ª api_tokens.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
		fmt.Println("   üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª api_tokens.txt —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏")
		fmt.Println("   üìñ –°–º. GO-LANG-VER-SETUP.md –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π")
	} else {
		fmt.Println("   ‚úÖ –§–∞–π–ª api_tokens.txt –Ω–∞–π–¥–µ–Ω")
	}

	// 3. –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	fmt.Println("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
	cfg, err := config.Load()
	if err != nil {
		fmt.Printf("   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: %v\n", err)
		return
	}
	fmt.Println("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞")

	// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
	fmt.Println("\nüîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:")
	
	if cfg.BotToken == "" {
		fmt.Println("   ‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
		fmt.Println("   üí° –î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ api_tokens.txt")
	} else {
		fmt.Printf("   ‚úÖ BOT_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–¥–ª–∏–Ω–∞: %d)\n", len(cfg.BotToken))
	}

	if cfg.CocAPIToken == "" {
		fmt.Println("   ‚ùå COC_API_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
		fmt.Println("   üí° –î–æ–±–∞–≤—å—Ç–µ COC_API_TOKEN –≤ api_tokens.txt")
	} else {
		fmt.Printf("   ‚úÖ COC_API_TOKEN —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–¥–ª–∏–Ω–∞: %d)\n", len(cfg.CocAPIToken))
	}

	// 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
	fmt.Println("\nüîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
	if cfg.BotUsername == "" {
		fmt.Println("   ‚ö†Ô∏è BOT_USERNAME –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)")
	} else {
		fmt.Printf("   ‚úÖ BOT_USERNAME: @%s\n", cfg.BotUsername)
	}

	fmt.Printf("   üìÇ –ü—É—Ç—å –∫ –ë–î: %s\n", cfg.DatabasePath)
	fmt.Printf("   üõ° –¢–µ–≥ –∫–ª–∞–Ω–∞: %s\n", cfg.OurClanTag)

	// 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
	fmt.Println("\nüêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:")
	if _, err := os.Stat("payment_bridge.py"); os.IsNotExist(err) {
		fmt.Println("   ‚ùå payment_bridge.py –Ω–µ –Ω–∞–π–¥–µ–Ω")
	} else {
		fmt.Println("   ‚úÖ payment_bridge.py –Ω–∞–π–¥–µ–Ω")
	}

	// 7. –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	fmt.Println("\n‚úÖ –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:")
	if err := cfg.Validate(); err != nil {
		fmt.Printf("   ‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞: %v\n", err)
		fmt.Println("\nüö® –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –±–æ—Ç–∞!")
		return
	}

	fmt.Println("   ‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞")
	fmt.Println("\nüéâ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
	fmt.Println("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: go run main.go")
}

func main() {
	log.SetFlags(log.LstdFlags | log.Lshortfile)
	validateSetup()
}