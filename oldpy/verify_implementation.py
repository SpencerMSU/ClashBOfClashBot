#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª–Ω–æ—Ç—ã —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ Python –≤–µ—Ä—Å–∏–∏ ClashBot.
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python3 verify_implementation.py

–°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç:
- –ù–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
- –ù–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π
- –ù–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Å–∫–∞–Ω–µ—Ä–æ–≤
- –ö–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–∞–∂–¥–æ–º –º–æ–¥—É–ª–µ
- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–µ—Ç–æ–¥–æ–≤

–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 0 –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, 1 –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö.
"""

import os
import re
import sys
from typing import Dict, List

def check_file_exists(filename: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞"""
    return os.path.exists(filename)

def check_function_exists(filename: str, function_name: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤ —Ñ–∞–π–ª–µ"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            content = f.read()
        patterns = [
            f'def {function_name}\\(',
            f'async def {function_name}\\('
        ]
        return any(re.search(pattern, content) for pattern in patterns)
    except:
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("=" * 70)
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–û–õ–ù–û–¢–´ –†–ï–ê–õ–ò–ó–ê–¶–ò–ò PYTHON –í–ï–†–°–ò–ò CLASHBOT")
    print("=" * 70)
    
    all_tests_passed = True
    
    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    required_files = [
        'bot.py', 'handlers.py', 'message_generator.py', 'keyboards.py',
        'coc_api.py', 'database.py', 'payment_service.py', 'building_monitor.py',
        'war_archiver.py', 'user_state.py', 'translations.py', 'policy.py',
        'config.py', 'building_data.py', 'errors.py'
    ]
    
    missing_files = [f for f in required_files if not check_file_exists(f)]
    if missing_files:
        print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã: {', '.join(missing_files)}")
        all_tests_passed = False
    else:
        print(f"   ‚úÖ –í—Å–µ {len(required_files)} –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π...")
    model_files = [
        'models/user.py', 'models/war.py', 'models/subscription.py',
        'models/building.py', 'models/user_profile.py', 'models/linked_clan.py'
    ]
    
    missing_models = [f for f in model_files if not check_file_exists(f)]
    if missing_models:
        print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–æ–¥–µ–ª–∏: {', '.join(missing_models)}")
        all_tests_passed = False
    else:
        print(f"   ‚úÖ –í—Å–µ {len(model_files)} –º–æ–¥–µ–ª–µ–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∞–Ω–µ—Ä–æ–≤
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫–∞–Ω–µ—Ä–æ–≤...")
    scanner_files = ['scanners/clan_scanner.py', 'scanners/war_importer.py']
    
    missing_scanners = [f for f in scanner_files if not check_file_exists(f)]
    if missing_scanners:
        print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å–∫–∞–Ω–µ—Ä—ã: {', '.join(missing_scanners)}")
        all_tests_passed = False
    else:
        print(f"   ‚úÖ –í—Å–µ {len(scanner_files)} —Å–∫–∞–Ω–µ—Ä–∞ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    # 4. –ö–ª—é—á–µ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...")
    
    key_functions = {
        'message_generator.py': [
            'handle_premium_menu', 'handle_building_tracker_toggle',
            'handle_subscription_type_selection', 'display_war_violations'
        ],
        'handlers.py': [
            '_handle_premium_menu', '_handle_building_tracker'
        ],
        'coc_api.py': [
            'get_player_info', 'get_clan_info', '_track_error'
        ],
        'payment_service.py': [
            'create_payment', 'check_payment_status', 'create_refund'
        ],
        'keyboards.py': [
            'main_menu', 'premium_menu', 'subscription_types'
        ]
    }
    
    missing_functions = []
    for filename, functions in key_functions.items():
        for func in functions:
            if not check_function_exists(filename, func):
                missing_functions.append(f"{filename}:{func}")
    
    if missing_functions:
        print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ—É–Ω–∫—Ü–∏–∏:")
        for func in missing_functions:
            print(f"      - {func}")
        all_tests_passed = False
    else:
        total_checked = sum(len(funcs) for funcs in key_functions.values())
        print(f"   ‚úÖ –í—Å–µ {total_checked} –∫–ª—é—á–µ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 70)
    if all_tests_passed:
        print("‚úÖ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ PYTHON –†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–í–ï–†–®–ï–ù–ê!")
        print("\nüìö –î–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–º. PYTHON_IMPLEMENTATION_COMPLETE.md")
        print("=" * 70)
        return 0
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("=" * 70)
        return 1

if __name__ == "__main__":
    sys.exit(main())
