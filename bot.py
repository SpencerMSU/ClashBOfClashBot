"""
–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞ - –∞–Ω–∞–ª–æ–≥ Java ClashBot
"""
import logging
from typing import Dict, Any
from telegram import Bot
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters

from config import config
from database import DatabaseService
from coc_api import CocApiClient
from handlers import MessageHandler as BotMessageHandler, CallbackHandler as BotCallbackHandler
from message_generator import MessageGenerator
from war_archiver import WarArchiver
from keyboards import Keyboards

logger = logging.getLogger(__name__)


class ClashBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å Telegram –±–æ—Ç–∞ –¥–ª—è Clash of Clans"""
    
    def __init__(self):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        self.token = config.BOT_TOKEN
        self.db_service = DatabaseService()
        self.coc_client = CocApiClient()
        self.message_generator = MessageGenerator(self.db_service, self.coc_client)
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.message_handler = BotMessageHandler(self.message_generator)
        self.callback_handler = BotCallbackHandler(self.message_generator)
        
        # –ê—Ä—Ö–∏–≤–∞—Ç–æ—Ä –≤–æ–π–Ω
        self.war_archiver = None
        
        # –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram
        self.application = None
        self.bot_instance = None
    
    async def initialize(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞"""
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            await self.db_service.init_db()
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –±–æ—Ç–∞
            self.application = Application.builder().token(self.token).build()
            self.bot_instance = self.application.bot
            
            # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            self._register_handlers()
            
            # –ó–∞–ø—É—Å–∫ –∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä–∞ –≤–æ–π–Ω
            await self._start_war_archiver()
            
            logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞: {e}")
            raise
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        app = self.application
        
        # –ö–æ–º–∞–Ω–¥–∞ /start
        app.add_handler(CommandHandler("start", self._start_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        app.add_handler(MessageHandler(
            filters.TEXT & ~filters.COMMAND, 
            self.message_handler.handle_message
        ))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        app.add_handler(CallbackQueryHandler(self.callback_handler.handle_callback))
    
    async def _start_command(self, update, context):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        await update.message.reply_text(
            "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –¥–ª—è Clash of Clans!\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:\n"
            "‚Ä¢ –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏ –∏–≥—Ä–æ–∫–æ–≤\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞–Ω–∞—Ö\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–æ–π–Ω—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
            "‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–ª–∞–Ω–æ–≤—ã—Ö –≤–æ–π–Ω–∞—Ö\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:",
            reply_markup=Keyboards.main_menu()
        )
    
    async def _start_war_archiver(self):
        """–ó–∞–ø—É—Å–∫ –∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä–∞ –≤–æ–π–Ω"""
        try:
            self.war_archiver = WarArchiver(
                clan_tag=config.OUR_CLAN_TAG,
                db_service=self.db_service,
                coc_client=self.coc_client,
                bot_instance=self.bot_instance
            )
            await self.war_archiver.start()
            logger.info(f"–ê—Ä—Ö–∏–≤–∞—Ç–æ—Ä –≤–æ–π–Ω –∑–∞–ø—É—â–µ–Ω –¥–ª—è –∫–ª–∞–Ω–∞ {config.OUR_CLAN_TAG}")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä–∞ –≤–æ–π–Ω: {e}")
    
    async def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            await self.initialize()
            
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
            await self.application.run_polling(
                allowed_updates=['message', 'callback_query'],
                drop_pending_updates=True
            )
            
        except KeyboardInterrupt:
            logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
        finally:
            await self.shutdown()
    
    async def shutdown(self):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞"""
        try:
            logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞...")
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞—Ç–æ—Ä–∞
            if self.war_archiver:
                await self.war_archiver.stop()
            
            # –ó–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ COC API
            if hasattr(self.coc_client, 'close'):
                await self.coc_client.close()
            
            # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π
            if hasattr(self.message_generator, 'close'):
                await self.message_generator.close()
            
            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if self.application:
                await self.application.shutdown()
            
            logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞: {e}")
    
    async def send_message(self, chat_id: int, text: str, reply_markup=None, parse_mode=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if self.bot_instance:
            await self.bot_instance.send_message(
                chat_id=chat_id,
                text=text,
                reply_markup=reply_markup,
                parse_mode=parse_mode
            )
    
    async def edit_message(self, chat_id: int, message_id: int, text: str, 
                          reply_markup=None, parse_mode=None):
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if self.bot_instance:
            await self.bot_instance.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=text,
                reply_markup=reply_markup,
                parse_mode=parse_mode
            )