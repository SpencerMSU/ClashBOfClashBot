#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

echo "üîç –ü–û–õ–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–ê–ó–´ –î–ê–ù–ù–´–•"
echo "=================================================="

cd "$(dirname "$0")"

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -d "venv" ]; then
    echo "üì¶ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    source venv/bin/activate
fi

echo "üìç –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ë–î —á–µ—Ä–µ–∑ Python
echo ""
echo "üêç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î —á–µ—Ä–µ–∑ Python..."

python3 -c "
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, '.')

try:
    from src.services.database import DatabaseService
    from config.config import config
    
    async def init_database():
        print('üóÑÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ DatabaseService...')
        db_service = DatabaseService()
        
        print(f'üìÇ –ü—É—Ç—å –∫ –ë–î: {os.path.abspath(db_service.db_path)}')
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏
        db_dir = os.path.dirname(os.path.abspath(db_service.db_path))
        if not os.path.exists(db_dir):
            print(f'‚ùå –ü–∞–ø–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {db_dir}')
            return False
            
        if not os.access(db_dir, os.W_OK):
            print(f'‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ –ø–∞–ø–∫—É: {db_dir}')
            return False
            
        print('‚úÖ –ü–∞–ø–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏')
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
        print('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...')
        await db_service.init_db()
        
        print('‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!')
        return True
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    result = asyncio.run(init_database())
    
    if result:
        print('üéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    else:
        print('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏')
        sys.exit(1)
        
except Exception as e:
    print(f'üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}')
    import traceback
    traceback.print_exc()
    sys.exit(1)
"

if [ $? -eq 0 ]; then
    echo ""
    echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ë–î..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü
    sqlite3 clashbot.db "
    .mode column
    .headers on
    
    SELECT name FROM sqlite_master WHERE type='table' ORDER BY name;
    " 2>/dev/null || {
        echo "‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ SQLite"
        exit 1
    }
    
    echo ""
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü:"
    
    # –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü–∞—Ö
    for table in users wars attacks linked_clans subscriptions buildings; do
        count=$(sqlite3 clashbot.db "SELECT COUNT(*) FROM $table" 2>/dev/null || echo "0")
        echo "   üìã $table: $count –∑–∞–ø–∏—Å–µ–π"
    done
    
    echo ""
    echo "üéâ –ë–ê–ó–ê –î–ê–ù–ù–´–• –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!"
    echo "‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã"
    echo "‚úÖ –ò–Ω–¥–µ–∫—Å—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"
    echo ""
    echo "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å Ultra Scanner:"
    echo "   python scripts/all_importer.py"
    
else
    echo ""
    echo "‚ùå –û–®–ò–ë–ö–ê –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ë–î"
    echo "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞"
    exit 1
fi